{"version":3,"sources":["components/Home.js","components/About.js","api/apiUtils.js","api/courseApi.js","components/CoursesList.js","components/Courses.js","components/common/TextInput.js","components/common/SelectInput.js","components/CourseForm.js","appDispatcher.js","actions/actionTypes.js","stores/courseStore.js","actions/courseActions.js","components/ManageCourses.js","components/common/Header.js","components/NotFound.js","components/App.js","index.js"],"names":["Home","react_default","a","createElement","className","react_router_dom","to","About","React","Component","handleResponse","_x","_handleResponse","apply","this","arguments","_callee","response","error","regenerator_default","wrap","_context","prev","next","ok","abrupt","json","status","text","sent","Error","stop","handleError","console","baseUrl","process","REACT_APP_API_URL","CoursesList","props","courses","map","key","id","slug","title","authorId","category","Courses","_useState","useState","_useState2","Object","slicedToArray","setCourses","useEffect","fetch","then","catch","_courses","Fragment","components_CoursesList","TextInput","wrapperClass","length","htmlFor","label","type","onChange","name","value","defaultProps","SelectInput","CourseForm","onSubmit","common_TextInput","course","errors","common_SelectInput","dispatcher","Dispatcher","actionTypes","CREATE_COURSE","store","callback","on","removeListener","emit","find","EventEmitter","register","action","actionType","push","emitChange","saveCourse","method","headers","content-type","body","JSON","stringify","objectSpread","parseInt","courseApi","savedCourse","dispatch","ManageCourses","setErrors","_useState3","_useState4","setCourse","match","params","courseStore","getCourseBySlug","components_CourseForm","event","defineProperty","target","preventDefault","_errors","keys","formIsValid","courseActions","history","toast","success","Header","activeStyle","color","exact","NotFound","App","react_toastify","autoClose","hideProgressBar","common_Header","react_router","path","component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.e95d43e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home(){\r\n    return(\r\n        <div className=\"jumbotron\">\r\n            <h1>HomePage</h1>\r\n            <p>My web personal</p>\r\n            <Link to=\"about\" className=\"btn btn-primary\">About</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nclass About extends React.Component {\r\n  render() {\r\n    return <h2>AboutPage</h2>;\r\n  }\r\n}\r\n\r\nexport default About;\r\n","export async function handleResponse(response) {\r\n  if (response.ok) return response.json();\r\n  if (response.status === 400) {\r\n    // So, a server-side validation error occurred.\r\n    // Server side validation returns a string error message, so parse as text instead of json.\r\n    const error = await response.text();\r\n    throw new Error(error);\r\n  }\r\n  throw new Error(\"Network response was not ok.\");\r\n}\r\n\r\n// In a real app, would likely call an error logging service.\r\nexport function handleError(error) {\r\n  // eslint-disable-next-line no-console\r\n  console.error(\"API call failed. \" + error);\r\n  throw error;\r\n}\r\n","import { handleResponse, handleError } from \"./apiUtils\";\r\nconst baseUrl = process.env.REACT_APP_API_URL + \"/courses/\";\r\n\r\nexport function getCourses() {\r\n  return fetch(baseUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getCourseBySlug(slug) {\r\n  return fetch(baseUrl + \"?slug=\" + slug)\r\n    .then(response => {\r\n      if (!response.ok) throw new Error(\"Network response was not ok.\");\r\n      return response.json().then(courses => {\r\n        if (courses.length !== 1) throw new Error(\"Course not found: \" + slug);\r\n        return courses[0]; // should only find one course for a given slug, so return it.\r\n      });\r\n    })\r\n    .catch(handleError);\r\n}\r\n\r\nexport function saveCourse(course) {\r\n  return fetch(baseUrl + (course.id || \"\"), {\r\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      ...course,\r\n      // Parse authorId to a number (in case it was sent as a string).\r\n      authorId: parseInt(course.authorId, 10)\r\n    })\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function deleteCourse(courseId) {\r\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CoursesList(props){\r\n    return(\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Title</th>\r\n              <th>Author ID</th>\r\n              <th>Category</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.courses.map(courses => {\r\n              return (\r\n                <tr key={courses.id}>\r\n                  <td><Link to={\"/course/\" + courses.slug}>{courses.title}</Link></td>\r\n                  <td>{courses.authorId}</td>\r\n                  <td>{courses.category}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default CoursesList;","import React, {useState,useEffect} from \"react\";\r\nimport { getCourses } from \"../api/courseApi\";\r\nimport CoursesList from './CoursesList';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Courses() {\r\n\r\n    const [ courses,setCourses ] = useState([]);\r\n\r\n    useEffect( () => {\r\n        getCourses().then(_courses => setCourses(_courses));\r\n    }, []);\r\n\r\n  \r\n    return ( \r\n        <>\r\n        <h1>CoursesPage</h1>\r\n        <Link className=\"btn btn-primary\" to=\"/course\">\r\n            Add course\r\n        </Link>\r\n        <CoursesList courses={courses} />\r\n        </>\r\n    );\r\n  }\r\n\r\nexport default Courses;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction TextInput(props)\r\n{\r\n    let wrapperClass = \"form-group\";\r\n\r\n    if(props.error.length > 0){\r\n        wrapperClass += \" has_error\";\r\n    }\r\n\r\n    return (\r\n      <div className={wrapperClass}>\r\n        <label htmlFor={props.id}>{props.label}</label>\r\n        <div className=\"field\">\r\n          <input\r\n            id={props.id}\r\n            type=\"text\"\r\n            onChange={props.onChange}\r\n            name={props.name}\r\n            className=\"form-control\"\r\n            value={props.value}\r\n          />\r\n        </div>\r\n        {props.error && (<div className=\"alert alert-danger\">{props.error}</div>)}\r\n      </div>\r\n    );\r\n}\r\n\r\nTextInput.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.string,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInput.defaultProps = {\r\n    error: \"\"\r\n}\r\n\r\n\r\nexport default TextInput;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction SelectInput(props)\r\n{\r\n    let wrapperClass = \"form-group\";\r\n\r\n    if (props.error.length > 0) {\r\n      wrapperClass += \" has_error\";\r\n    }\r\n    \r\n\r\n    return (\r\n      <div className={wrapperClass}>\r\n        <label htmlFor={props.id}>{props.label}</label>\r\n        <div className=\"field\">\r\n          <select\r\n            id={props.id}\r\n            type=\"text\"\r\n            onChange={props.onChange}\r\n            name={props.name}\r\n            className=\"form-control\"\r\n            value={props.value}\r\n          >\r\n            <option value=\"\" />\r\n            <option value=\"1\">Cory House</option>\r\n            <option value=\"2\">Scott Allen</option>\r\n          </select>\r\n        </div>\r\n        {props.error && (<div className=\"alert alert-danger\">{props.error}</div>)}\r\n      </div>\r\n    );\r\n}\r\n\r\nSelectInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string,\r\n  error: PropTypes.string\r\n};\r\n\r\nSelectInput.defaultProps = {\r\n  error: \"\"\r\n};\r\n\r\n\r\nexport default SelectInput;\r\n\r\n","import React from \"react\";\r\nimport TextInput from \"./common/TextInput\";\r\nimport SelectInput from \"./common/SelectInput\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction CourseForm(props){\r\n    return (\r\n      <form onSubmit={props.onSubmit}>\r\n      \r\n        <TextInput\r\n          id=\"title\"\r\n          label=\"Title\"\r\n          name=\"title\"\r\n          onChange={props.onChange}\r\n          value={props.course.title}\r\n          error={props.errors.title}\r\n        />\r\n\r\n        <SelectInput\r\n          id=\"authorId\"\r\n          label=\"AuthorId\"\r\n          name=\"authorId\"\r\n          onChange={props.onChange}\r\n          value={props.course.authorId}\r\n          error={props.errors.authorId}\r\n        />\r\n\r\n        <TextInput\r\n          id=\"category\"\r\n          label=\"Category\"\r\n          name=\"category\"\r\n          onChange={props.onChange}\r\n          value={props.course.category}\r\n          error={props.errors.category}\r\n        />\r\n\r\n        <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\r\n      </form>\r\n    );\r\n}\r\n\r\nCourseForm.propTypes = {\r\n  course: PropTypes.object.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CourseForm;","import { Dispatcher } from \"flux\";\r\n\r\nconst dispatcher = new Dispatcher();\r\nexport default dispatcher;","export default {\r\n    CREATE_COURSE: \"CREATE_COURSE\"\r\n}","import {EventEmitter} from \"events\";\r\nimport Dispatcher from \"../appDispatcher\";\r\nimport actionTypes from \"../actions/actionTypes\";\r\n\r\nconst CHANGE_EVENT = \"change\";\r\nlet _courses = [];\r\n\r\nclass CourseStore extends EventEmitter {\r\n    addChangeListener(callback){\r\n        this.on(CHANGE_EVENT, callback);\r\n    }\r\n\r\n    removeChangeListener(callback){\r\n        this.removeListener(CHANGE_EVENT, callback);\r\n    }\r\n    \r\n    emitChange(){\r\n        this.emit(CHANGE_EVENT);\r\n    }\r\n\r\n    getCourses(){\r\n        return _courses;\r\n    }\r\n\r\n    getCourseBySlug(slug){\r\n        return _courses.find(course => course.slug === slug);\r\n    }\r\n}\r\n\r\nconst store = new CourseStore();\r\n\r\nDispatcher.register(action => {\r\n    switch(action.actionType){\r\n        case actionTypes.CREATE_COURSE:\r\n            _courses.push(action.course);\r\n            store.emitChange();\r\n            break;\r\n        default:\r\n    }\r\n});\r\n\r\n\r\nexport default store;","import dispatcher from \"../appDispatcher\";\r\nimport * as courseApi from '../api/courseApi';\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport function saveCourse(course){\r\n    courseApi.saveCourse(course).then(savedCourse => {\r\n        //Mensajero informa a todos los stores de que un curso fue creado\r\n        dispatcher.dispatch({\r\n            actionType: actionTypes.CREATE_COURSE,\r\n            course: savedCourse\r\n        });\r\n    });\r\n}","import React, { useState, useEffect }  from \"react\";\r\nimport CourseForm  from \"./CourseForm\";\r\nimport courseStore from \"../stores/courseStore\";\r\nimport * as courseActions from '../actions/courseActions';\r\nimport { toast } from 'react-toastify'\r\n\r\nconst ManageCourses = props => {\r\n    const [errors, setErrors] = useState({});\r\n    const [course, setCourse] = useState({\r\n        id: null,\r\n        slug: \"\",\r\n        title: \"\",\r\n        authorId: null,\r\n        category: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        const slug = props.match.params.slug;\r\n        if(slug)\r\n        {\r\n          setCourse(courseStore.getCourseBySlug(slug));\r\n        }\r\n    }, [props.match.params.slug]);\r\n\r\n    function handleChange(event){\r\n        setCourse({\r\n            ...course, \r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    function formIsValid() {\r\n      const _errors = {};\r\n\r\n      if (!course.title) {\r\n        _errors.title = \"Title is Required\";\r\n      }\r\n\r\n      if (!course.authorId) {\r\n        _errors.authorId = \"AuthorID is Required\";\r\n      }\r\n\r\n      if (!course.category) {\r\n        _errors.category = \"Category is Required\";\r\n      }\r\n\r\n      setErrors(_errors);\r\n      return Object.keys(_errors).length === 0;\r\n    }\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault();\r\n        if(!formIsValid()) return;\r\n        courseActions.saveCourse(course).then(() => {\r\n            props.history.push(\"/courses\");\r\n            toast.success('Course saved.');\r\n        });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <h2>Manage Course</h2>\r\n        <CourseForm\r\n          errors={errors}\r\n          course={course}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n        />\r\n      </>\r\n    );\r\n}\r\n\r\nexport default ManageCourses;","import React from \"react\";\r\nimport { NavLink  } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  const activeStyle = { color: \"orange\"};\r\n  return (\r\n    <nav>\r\n      <NavLink activeStyle={activeStyle} exact to=\"/ReactApp\">\r\n        Home\r\n      </NavLink>\r\n      {\" | \"}\r\n      <NavLink activeStyle={activeStyle} to=\"/courses\">\r\n        Courses\r\n      </NavLink>\r\n      {\" | \"}\r\n      <NavLink activeStyle={activeStyle} to=\"/about\">\r\n        About\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NotFound(){\r\n    return(\r\n      <div>\r\n        <h2>Not found page</h2>\r\n        <p>\r\n          <Link to=\"/ReactApp\">Back to home</Link>\r\n        </p>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport Home from \"./Home\";\r\nimport About from \"./About\";\r\nimport Courses from \"./Courses\";\r\nimport ManageCourses from \"./ManageCourses\";\r\nimport Header from \"./common/Header\";\r\nimport NotFound from \"./NotFound\";\r\nimport { Route,Switch } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n  \r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n    <ToastContainer autoClose={3000} hideProgressBar />\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/ReactApp/\" exact component={Home} />\r\n        <Route path=\"/courses/\" component={Courses} />\r\n        <Route path=\"/course/:slug\" component={ManageCourses} />\r\n        <Route path=\"/course/\" component={ManageCourses} />\r\n        <Route path=\"/about/\" component={About} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}